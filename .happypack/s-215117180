'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _style5 = require('antd-mobile/lib/button/style');

var _button = require('antd-mobile/lib/button');

var _button2 = _interopRequireDefault(_button);

var _style6 = require('antd-mobile/lib/list/style');

var _list = require('antd-mobile/lib/list');

var _list2 = _interopRequireDefault(_list);

var _style7 = require('antd-mobile/lib/white-space/style');

var _whiteSpace = require('antd-mobile/lib/white-space');

var _whiteSpace2 = _interopRequireDefault(_whiteSpace);

var _style8 = require('antd-mobile/lib/nav-bar/style');

var _navBar = require('antd-mobile/lib/nav-bar');

var _navBar2 = _interopRequireDefault(_navBar);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Next = function (_Component) {
  (0, _inherits3.default)(Next, _Component);

  function Next() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Next);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Next.__proto__ || (0, _getPrototypeOf2.default)(Next)).call.apply(_ref, [this].concat(args))), _this), _this.onClickA = function (content) {
      alert(content);
    }, _this.onClickB = function (e, content) {
      e.preventDefault();
      alert(content);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Next, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var history = this.props.history;

      return _react2.default.createElement(
        'div',
        { style: { minHeight: 480 } },
        _react2.default.createElement(
          _navBar2.default,
          { mode: 'light', onLeftClick: function onLeftClick() {
              return history.push("/");
            } },
          '\u7B2C\u4E8C\u754C\u9762'
        ),
        _react2.default.createElement(_whiteSpace2.default, { size: 'lg' }),
        _react2.default.createElement(
          _list2.default,
          null,
          _react2.default.createElement(
            _list2.default.Item,
            { arrow: 'horizontal',
              onClick: function onClick() {
                return _this2.onClickA("触发了第二界面的【List.Item】按钮");
              } },
            _react2.default.createElement(
              'span',
              { style: { color: "red" } },
              'List.Item'
            )
          )
        ),
        _react2.default.createElement(_whiteSpace2.default, { size: 'lg' }),
        _react2.default.createElement(
          _button2.default,
          { onClick: function onClick(e) {
              return _this2.onClickB(e, "触发了第二界面的【Button】按钮");
            } },
          _react2.default.createElement(
            'span',
            { style: { color: "red" } },
            'Button'
          )
        ),
        _react2.default.createElement(_whiteSpace2.default, { size: 'lg' }),
        _react2.default.createElement(
          'div',
          { style: { backgroundColor: "#FFF", paddingLeft: 15, height: 42, lineHeight: "42px" },
            onClick: function onClick(e) {
              return _this2.onClickB(e, "触发了第二界面的【Div】按钮");
            } },
          _react2.default.createElement(
            'span',
            { style: { color: "red" } },
            'Div'
          )
        )
      );
    }
  }]);
  return Next;
}(_react.Component);

exports.default = Next;